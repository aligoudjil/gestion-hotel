package controller;

import database.ClientDAO;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.*;
import javafx.stage.Stage;
import model.Client;

public class ClientView {

    private TableView<Client> table;
    private ObservableList<Client> data;

    public void start(Stage stage, Object unused) {
        table = new TableView<>();
        data = FXCollections.observableArrayList(ClientDAO.getAllClients());
        table.setItems(data);

        TableColumn<Client, Integer> colId = new TableColumn<>("ID");
        colId.setCellValueFactory(new PropertyValueFactory<>("id"));

        TableColumn<Client, String> colNom = new TableColumn<>("Nom");
        colNom.setCellValueFactory(new PropertyValueFactory<>("nom"));

        TableColumn<Client, String> colPrenom = new TableColumn<>("Pr√©nom");
        colPrenom.setCellValueFactory(new PropertyValueFactory<>("prenom"));

        table.getColumns().addAll(colId, colNom, colPrenom);
        table.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);

        // üé® STYLE DE LA TABLE ROUGE
        table.setStyle("-fx-background-color: transparent;");
        table.setStyle("-fx-control-inner-background: #e53935; -fx-text-fill: black;");
        table.setStyle("-fx-table-cell-border-color: white;");

        // En-t√™tes blancs
        table.setStyle(table.getStyle()
                + " -fx-table-header-background: white;"
                + " -fx-table-header-border-color: white;"
        );

        TextField tfNom = new TextField();
        tfNom.setPromptText("Nom");
        tfNom.setStyle("-fx-background-color: #2e2e2e; -fx-text-fill: white;");

        TextField tfPrenom = new TextField();
        tfPrenom.setPromptText("Pr√©nom");
        tfPrenom.setStyle("-fx-background-color: #2e2e2e; -fx-text-fill: white;");

        Button btnAjouter = new Button("Ajouter");
        btnAjouter.setStyle("-fx-background-color: #e53935; -fx-text-fill: white;");

        btnAjouter.setOnAction(e -> {
            String nom = tfNom.getText().trim();
            String prenom = tfPrenom.getText().trim();

            if (nom.isEmpty() || prenom.isEmpty()) {
                showAlert("Veuillez remplir tous les champs.");
                return;
            }

            Client client = new Client(0, nom, prenom);
            ClientDAO.ajouterClient(client);
            refreshTable();
            tfNom.clear();
            tfPrenom.clear();
        });

        HBox form = new HBox(10, tfNom, tfPrenom, btnAjouter);
        form.setAlignment(Pos.CENTER);
        form.setPadding(new Insets(10));

        VBox layout = new VBox(10, table, form);
        layout.setPadding(new Insets(15));
        layout.setStyle("-fx-background-color: #1e1e1e;");

        Scene scene = new Scene(layout, 700, 500);
        stage.setScene(scene);
        stage.setTitle("Liste des Clients");
        stage.show();
    }

    private void refreshTable() {
        data.clear();
        data.addAll(ClientDAO.getAllClients());
    }

    private void showAlert(String message) {
        Alert alert = new Alert(Alert.AlertType.WARNING);
        alert.setTitle("Avertissement");
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.show();
    }
}
